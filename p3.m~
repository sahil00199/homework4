clear all;
close all;

%//Open file
fid = fopen('train-images.idx3-ubyte', 'r');

A = fread(fid, 1, 'uint32');
magicNumber = swapbytes(uint32(A));

%//Read in total number of images
%//A = fread(fid, 4, 'uint8');
%//totalImages = sum(bitshift(A', [24 16 8 0]));

%//OR
A = fread(fid, 1, 'uint32');
totalImages = swapbytes(uint32(A));

%//Read in number of rows
%//A = fread(fid, 4, 'uint8');
%//numRows = sum(bitshift(A', [24 16 8 0]));

%//OR
A = fread(fid, 1, 'uint32');
numRows = swapbytes(uint32(A));

%//Read in number of columns
%//A = fread(fid, 4, 'uint8');
%//numCols = sum(bitshift(A', [24 16 8 0]));

%// OR
A = fread(fid, 1, 'uint32');
numCols = swapbytes(uint32(A));

for k = 1 : totalImages
    %//Read in numRows*numCols pixels at a time
    A = fread(fid, numRows*numCols, 'uint8');
    %//Reshape so that it becomes a matrix
    %//We are actually reading this in column major format
    %//so we need to transpose this at the end
    imageCellArray{k} = reshape(uint8(A), numCols, numRows)';
end

%//Close the file
fclose(fid);

fid2 = fopen('train-labels.idx1-ubyte');
A = fread(fid2, 1, 'uint32');
magicNumber2 = swapbytes(uint32(A)); % Should be 2049
labels = fread(fid2, totalImages, 'uint8');

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                          end of reading
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

numbers = zeros(1, 10);
length = numCols*numRows;
means = zeros(10, length);
covariances = zeros(10, length, length);
for i=1:10
    for j = 1:totalImages
        if labels(j) == i - 1
            numbers(i) = numbers(i) + 1;
            data = double(imageCellArray{j});
            data = reshape(data, 1, length);
            means(i, :) = means(i, :) + data;
        end
    end
    means(i, :) = means(i, :)./ numbers(i);
end

eigenvalues = zeros(10, length);
eigenvectors = zeros(10, length);
vectors = zeros(length, length);
values = zeros(length, length);
meansNeg = zeros(10, length);
meansPos = zeros(10, length);

for i=1:10
    covar = zeros(numbers(i),784);
    y = 1;
    for j = 1:totalImages
        if labels(j) == i - 1
            data = double(reshape(imageCellArray{j},1,length)) - means(i,:);
            covar(y,:) = data;
            y = y + 1;
        end
    end
%     covariances(i, :, :) = cov(covar);
%     %size(eig(reshape(covariances(i, :, :), length, length)));
%     cova = covariances(i, :, :);
%     cova = reshape(cova, length, length);
    [vectors, values] = eig(cov(covar));
    for k = 1:length
        eigenvalues(i, k) = values(length-k+1, length-k+1);
    end
    eigenvectors(i, :) = vectors(:,length)';
    meansNeg(i, :) = means(i, :) - sqrt(eigenvalues(i, 1))*eigenvectors(i,:);
    meansPos(i, :) = means(i, :) + sqrt(eigenvalues(i, 1))*eigenvectors(i,:);
end, 
figure;
% title('digit 0')
% subplot(1,3,1)
% imshow(reshape(means(2,:)./255,28,28));
% subplot(1,3,2)
% imshow(reshape(means(3,:)./255,28,28));
% subplot(1,3,3)
% imshow(reshape(means(4,:)./255,28,28));
for i=1:10
    subplot(1,10,i)
    imshow(reshape(means(i,:),28

